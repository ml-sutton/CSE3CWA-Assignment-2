services:
  frontend:
    build: ./front-end
    ports:
      - "80:3000"
    depends_on:
      - api
    environment:
      - NODE_ENV=development
      - API_URL=http://api:3000
    volumes:
      - ./front-end:/app
      - /app/node_modules
    command: npm run docker-dev

  api:
    build: ./back-end
    ports:
      - "4080:3000"
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    volumes:
      - ./back-end:/app
      - /app/node_modules
    command: sh -c "npm run docker-dev"

  postgres:
    image: postgres
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

volumes:
  pg_data:
